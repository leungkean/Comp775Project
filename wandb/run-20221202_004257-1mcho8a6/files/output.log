[34m[1mwandb[39m[22m: [33mWARNING[39m The save_model argument by default saves the model in the HDF5 format that cannot save custom objects like subclassed models and custom layers. This behavior will be deprecated in a future release in favor of the SavedModel format. Meanwhile, the HDF5 model is saved as W&B files and the SavedModel as W&B Artifacts.
2022-12-02 00:43:02.222605: W tensorflow/core/platform/profile_utils/cpu_utils.cc:128] Failed to get CPU frequency: 0 Hz
Traceback (most recent call last):
  File "/Users/keanl/Desktop/Computer_Science/Comp_775/project/Comp775Project/train_unet_classifier.py", line 203, in <module>
    main()
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/click/core.py", line 1128, in __call__
    return self.main(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/click/core.py", line 1053, in main
    rv = self.invoke(ctx)
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/click/core.py", line 1395, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/click/core.py", line 754, in invoke
    return __callback(*args, **kwargs)
  File "/Users/keanl/Desktop/Computer_Science/Comp_775/project/Comp775Project/train_unet_classifier.py", line 166, in main
    model.fit(train, epochs=epochs, validation_data=val, callbacks=[WandbCallback()], steps_per_epoch=10, validation_steps=5)
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/wandb/integration/magic.py", line 301, in _magic_fit
    return _fit_wrapper(
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/wandb/integration/magic.py", line 269, in _fit_wrapper
    return fn(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/wandb/integration/keras/keras.py", line 163, in new_v2
    return old_v2(*args, **kwargs)
  File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/utils/traceback_utils.py", line 67, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/var/folders/t8/xpt23s1j08vd186gztkz58700000gn/T/__autograph_generated_filepvvn15yd.py", line 15, in tf__train_function
    retval_ = ag__.converted_call(ag__.ld(step_function), (ag__.ld(self), ag__.ld(iterator)), None, fscope)
ValueError: in user code:
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/engine/training.py", line 1051, in train_function  *
        return step_function(self, iterator)
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/engine/training.py", line 1040, in step_function  **
        outputs = model.distribute_strategy.run(run_step, args=(data,))
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/engine/training.py", line 1030, in run_step  **
        outputs = model.train_step(data)
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/engine/training.py", line 890, in train_step
        loss = self.compute_loss(x, y, y_pred, sample_weight)
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/engine/training.py", line 948, in compute_loss
        return self.compiled_loss(
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/engine/compile_utils.py", line 201, in __call__
        loss_value = loss_obj(y_t, y_p, sample_weight=sw)
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/losses.py", line 139, in __call__
        losses = call_fn(y_true, y_pred)
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/losses.py", line 243, in call  **
        return ag_fn(y_true, y_pred, **self._fn_kwargs)
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/losses.py", line 1930, in binary_crossentropy
        backend.binary_crossentropy(y_true, y_pred, from_logits=from_logits),
    File "/opt/homebrew/Caskroom/miniforge/base/lib/python3.9/site-packages/keras/backend.py", line 5283, in binary_crossentropy
        return tf.nn.sigmoid_cross_entropy_with_logits(labels=target, logits=output)
    ValueError: `logits` and `labels` must have the same shape, received ((None, 128, 128, 2) vs (None, 128, 128, 1)).
Metal device set to: Apple M1
systemMemory: 8.00 GB
maxCacheSize: 2.67 GB
Model: "u_net"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to
==================================================================================================
 x (InputLayer)                 [(None, 128, 128, 3  0           []
                                )]
 b (InputLayer)                 [(None, 128, 128, 1  0           []
                                )]
 multiply (Multiply)            (None, 128, 128, 3)  0           ['x[0][0]',
                                                                  'b[0][0]']
 conv2d (Conv2D)                (None, 128, 128, 64  1792        ['multiply[0][0]']
                                )
 conv2d_1 (Conv2D)              (None, 128, 128, 64  36928       ['conv2d[0][0]']
                                )
 dropout (Dropout)              (None, 128, 128, 64  0           ['conv2d_1[0][0]']
                                )
 max_pooling2d (MaxPooling2D)   (None, 64, 64, 64)   0           ['dropout[0][0]']
 conv2d_2 (Conv2D)              (None, 64, 64, 128)  73856       ['max_pooling2d[0][0]']
 conv2d_3 (Conv2D)              (None, 64, 64, 128)  147584      ['conv2d_2[0][0]']
 up_sampling2d (UpSampling2D)   (None, 128, 128, 12  0           ['conv2d_3[0][0]']
                                8)
 conv2d_4 (Conv2D)              (None, 128, 128, 64  32832       ['up_sampling2d[0][0]']
                                )
 concatenate (Concatenate)      (None, 128, 128, 12  0           ['conv2d_1[0][0]',
                                8)                                'conv2d_4[0][0]']
 conv2d_5 (Conv2D)              (None, 128, 128, 64  73792       ['concatenate[0][0]']
                                )
 conv2d_6 (Conv2D)              (None, 128, 128, 64  36928       ['conv2d_5[0][0]']
                                )
 conv2d_7 (Conv2D)              (None, 128, 128, 2)  1154        ['conv2d_6[0][0]']
 conv2d_8 (Conv2D)              (None, 128, 128, 2)  6           ['conv2d_7[0][0]']
==================================================================================================
Total params: 404,872
Trainable params: 404,872
Non-trainable params: 0
__________________________________________________________________________________________________
Epoch 1/10